@model RojgarMantra.Core.Models.UserTrainingInstituteAddEditModel

@{
    ViewBag.Title = "Training Institute AddEdit";
}
<div class="main-content-header container-fluid p-4">
    <div>
        <h6 class="main-content-title tx-18 mg-b-5 mg-t-7">Training Institute Add/Edit</h6>
    </div>
</div>

@using (Ajax.BeginForm("AddEdit", "TrainingInstitute", new AjaxOptions { HttpMethod = "POST", OnSuccess = "success", OnFailure = "failure" }, new { enctype = "multipart/form-data" }))
{
    <div class="card">
        <div class="card-body">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group ">
                        @Html.LabelFor(model => model.TrainingInstituteName, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.TrainingInstituteName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TrainingInstituteName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group ">
                        @Html.LabelFor(model => model.CompanyLink, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.CompanyLink, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyLink, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group ">
                        @Html.LabelFor(model => model.TrainingInstituteLogo, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.TextBoxFor(model => model.TrainingInstituteLogo, new { @class = "form-control", @type = "file" })
                            @Html.ValidationMessageFor(model => model.TrainingInstituteLogo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group ">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group ">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @if (ViewBag.Mode == "Update")
                            {
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = "readonly" })

                            }
                            else if (ViewBag.Mode == "Add")
                            {
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })

                            }
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group ">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group ">
                        @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.DropDownListFor(model => model.Designation, new SelectList(ViewBag.Designations, "Id", "Name"), "Select", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="box-footer text-left">
                <input type="submit" class="btn btn-rounded btn-primary" value="Save" />
                <a href="@Url.Action("Index", "TrainingInstitute")" class="btn btn-info">Cancel</a>
            </div>
        </div>
    </div>
}
@section scripts{

    <script src="https://ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.js"></script>
    <script>
        function success(data, textStatus, xhr) {
            common.showAlert(data);
             location.href = "@Url.Action("Index", "TrainingInstitute")";
        }
        function failure(data, textStatus, xhr) {
            common.showErrorAlert();
        }
    </script>
}

