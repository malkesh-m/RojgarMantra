@model RojgarMantra.Core.Models.UserJobSeekerAddEditModel

@{
    ViewBag.Title = "AddEdit";
}


<div class="main-content-header container-fluid p-4">
    <div>
        <h6 class="main-content-title tx-18 mg-b-5 mg-t-7">Candidate Add/Edit</h6>
    </div>
</div>

@using (Ajax.BeginForm("AddEdit", "JobSeeker", new AjaxOptions { HttpMethod = "POST", OnSuccess = "success", OnFailure = "failure" }, new {enctype = "multipart/form-data" }))
{
    <div class="card">
        <div class="card-body">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            <div class="row">



                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @if (ViewBag.Mode == "Update")
                        {
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = "readonly" })

                        }
                        else if (ViewBag.Mode == "Add")
                        {
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })

                        }
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @if (ViewBag.Mode == "Update")
                        {
                            @Html.HiddenFor(model => model.Password)

                        }
                        else if (ViewBag.Mode == "Add")
                        {
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })

                        }
                        @*@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })*@
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.MarriedStatus, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.MarriedStatus,ViewBag.marriedStatus as SelectList, "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MarriedStatus, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.RadioButtonFor(model => model.Gender, "Male") Male
                        @Html.RadioButtonFor(model => model.Gender, "Female") Female
                        @*@Html.EditorFor(model => model.Gender, new[] {
                    new SelectListItem() {Text = "Male", Value ="Male",
                    new SelectListItem() {Text = "Female", Value = "Female"}
                }, new { htmlAttributes = new { @class = "form-control" } })*@

                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <input type="text" name="DateOfBirth" id="DateOfBirth" class="form-control">
                        @*@Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @Type = "date" } })*@
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PhysicallyChallenged, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.PhysicallyChallenged)
                            @Html.ValidationMessageFor(model => model.PhysicallyChallenged, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.AlternateContactNumber, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.AlternateContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AlternateContactNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.Country, ViewBag.country as SelectList, "Select Country", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.State ,ViewBag.state as SelectList, "Select State", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.City,ViewBag.city as SelectList, "Select City", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PermanentLocation, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.PermanentLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PermanentLocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PrefferredLocation, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.PrefferredLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PrefferredLocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CurrentAddress, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.CurrentAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CurrentAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.Role, new SelectList(ViewBag.Roles, "Id", "Name"), "Select", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.Designation, new SelectList(ViewBag.Designations, "Id", "Name"), "Select", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.TotalExperience, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.TotalExperience, ViewBag.totalExperience as SelectList, "Select", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TotalExperience, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Skills, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CurrentCTCLac, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.CurrentCTCLac, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CurrentCTCLac, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CurrentCTCThousand, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.CurrentCTCThousand, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CurrentCTCThousand, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ExpectedCurrentCTCThousand, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.ExpectedCurrentCTCThousand, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExpectedCurrentCTCThousand, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ExpectedCurrentCTCLac, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.ExpectedCurrentCTCLac, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExpectedCurrentCTCLac, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.NegotiableExpectedCTC, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.NegotiableExpectedCTC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NegotiableExpectedCTC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.NoticePeriod, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.NoticePeriod,ViewBag.noticePeriod as SelectList,"Select", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.NoticePeriod, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.NegotiableNoticePeriod, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.NegotiableNoticePeriod)
                            @Html.ValidationMessageFor(model => model.NegotiableNoticePeriod, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PrevCompanyName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.PrevCompanyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PrevCompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <input type="text" name="From" id="From" class="form-control">
                        @*@Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control", @Type = "date" } })*@
                        @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <input type="text" name="To" id="To" class="form-control">
                        @*@Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control", @Type = "date" } })*@
                        @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.Experience, new SelectList(ViewBag.totalExperience, "Value", "Text"), "Select", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.SSCMarks, htmlAttributes: new { @class = "control-label", @id = "SSCMarks" })
                    <div>
                        @Html.EditorFor(model => model.SSCMarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SSCMarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.SSCCompletionYear, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.SSCCompletionYear, new SelectList(ViewBag.YearList, "text", "value"), "Select Year", htmlAttributes: new { @class = "form-control",@id = "SSCCompletionYear" })
                        @Html.ValidationMessageFor(model => model.SSCCompletionYear, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.HSCMarks, htmlAttributes: new { @class = "control-label", @id = "HSCMarks" })
                    <div>
                        @Html.EditorFor(model => model.HSCMarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HSCMarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.HSCCompletionYear, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.HSCCompletionYear, new SelectList(ViewBag.YearList, "text", "value"), "Select Year", htmlAttributes: new { @class = "form-control", @id = "HSCCompletionYear" })
                        @Html.ValidationMessageFor(model => model.HSCCompletionYear, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DegreeName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.DegreeName, new SelectList(ViewBag.Degree, "Id", "Name"), "Select", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DegreeName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.GraduationMarks, htmlAttributes: new { @class = "control-label", @id = "GraduationMarks" })
                    <div>
                        @Html.EditorFor(model => model.GraduationMarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GraduationMarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.GraduationCompletionYear, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.GraduationCompletionYear, new SelectList(ViewBag.YearList, "text", "value"), "Select Year", htmlAttributes: new { @class = "form-control", @id = "GraduationCompletionYear" })
                        @Html.ValidationMessageFor(model => model.GraduationCompletionYear, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.GraduationCompletionInstituteUniversity, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.GraduationCompletionInstituteUniversity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GraduationCompletionInstituteUniversity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PostDegreeName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.PostDegreeName, new SelectList(ViewBag.PostDegree, "Id", "Name"), "Select", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PostDegreeName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PostGraduationMarks, htmlAttributes: new { @class = "control-label", @id = "PostGraduationMarks" })
                    <div>
                        @Html.EditorFor(model => model.PostGraduationMarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostGraduationMarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PostGraduationCompletionYear, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.PostGraduationCompletionYear, new SelectList(ViewBag.YearList, "text", "value"), "Select Year", htmlAttributes: new { @class = "form-control", @id = "PostGraduationCompletionYear" })
                        @Html.ValidationMessageFor(model => model.PostGraduationCompletionYear, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PostGraduationCompletionInstituteUniversity, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.PostGraduationCompletionInstituteUniversity, new { htmlAttributes = new { @id = "", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostGraduationCompletionInstituteUniversity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CourseCompletionDuration, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.CourseCompletionDuration, new SelectList(ViewBag.courseCompletion, "Value", "Text"), "Select", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CourseCompletionDuration, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.SelectLanguage, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.SelectLanguage, new SelectList(ViewBag.languages, "Value", "Text"), "Select Language", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SelectLanguage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Read, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Read)
                            @Html.ValidationMessageFor(model => model.Read, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Write, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Write)
                            @Html.ValidationMessageFor(model => model.Write, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Speak, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Speak, new { @value = true })
                            @Html.ValidationMessageFor(model => model.Speak, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Resume, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(model => model.Resume, new { @class = "form-control", @type = "file", id = "Resume" })
                        @Html.ValidationMessageFor(model => model.Resume, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>
            <div class="box-footer text-left">
                <input type="submit" class="btn btn-primary" value="Save" />
                <a href="@Url.Action("Index", "JobSeeker")" class="btn btn-info">Cancel</a>
            </div>
        </div>
    </div>
}
@section scripts{
    <script src="https://ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.js"></script>
    <script src="~/Js/JobSeeker/addedit.js"></script>
    <script>
        function success(data, textStatus, xhr) {
    common.showAlert(data);
    location.href = "@Url.Action("Index", "JobSeeker")";
}
function failure(data, textStatus, xhr) {
    common.showErrorAlert();
}

$(function () {

    if (@Model.Id != 0) {

    $("#DateOfBirth").datepicker('setDate', '@Model.DateOfBirth.ToString("dd-MM-yyyy")');


    $("#From").datepicker('setDate', '@Model.From.ToString("dd-MM-yyyy")');

    $("#To").datepicker('setDate', '@Model.To.ToString("dd-MM-yyyy")');
}});
    </script>
}
